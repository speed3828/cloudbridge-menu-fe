name: Menu Frontend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/menu-fe/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'apps/menu-fe/**'

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository_owner }}/platform-menu-fe
  KUBE_NAMESPACE: cloudbridge-staging
  GKE_CLUSTER: my-gke-cluster
  GKE_ZONE: asia-northeast3
  GKE_PROJECT: youtube-automation-123

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: apps/menu-fe/package-lock.json

      - name: Install dependencies
        run: cd apps/menu-fe && npm ci

      - name: Build and test
        run: |
          cd apps/menu-fe
          npm run build
          npm run test

      # Make sure DOCKERHUB_USERNAME and DOCKERHUB_PASSWORD are set in GitHub repository secrets
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./apps/menu-fe
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ github.sha }}

      # GKE 인증 설정 (서비스 계정 키 사용)
      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          project_id: ${{ env.GKE_PROJECT }}
          
      - name: Deploy to Kubernetes
        run: |
          helm upgrade --install platform-menu-fe ./helm/platform-menu-fe \
            --namespace ${{ env.KUBE_NAMESPACE }} \
            --set image.tag=${{ github.sha }}

      # Make sure SLACK_WEBHOOK is set in GitHub repository secrets
      - name: Notify Slack
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} 